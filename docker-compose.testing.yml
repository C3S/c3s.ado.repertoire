# For copyright and license terms, see COPYRIGHT.rst (top level of repository)
# Repository: https://github.com/C3S/collecting_society_docker

version: '2.4'

networks:
  frontend:
  backend:

volumes:
  collecting_society_test_postgresql_data:
  collecting_society_test_echoprint_data:
  collecting_society_test_trytond_files:

services:

  test_database:
    build:
      context: ./services/build
      target: database
      args: &buildargs
        ENVIRONMENT: ${ENVIRONMENT}
        APT_CACHERURL: ${APT_CACHERURL}
        WORKDIR: ${WORKDIR}
        DEBIAN: ${DEBIAN}
        DEBUGGER_WINPDB: ${DEBUGGER_WINPDB}
        DEBUGGER_PTVSD: ${DEBUGGER_PTVSD}
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - collecting_society_test_postgresql_data:/var/lib/postgresql/data

  test_erpserver:
    build:
      context: ./services/build
      target: erpserver
      args: *buildargs
    command: execute deploy-erpserver
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "if curl -v --silent localhost:8069 2>&1 | grep 'Connection refused'; then exit 1; fi"]
      interval: 10s
      timeout: 5s
      retries: 5      
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      test_database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      ENVIRONMENT: testing
      POSTGRES_HOSTNAME: test_database

  test_web:
    build:
      context: ./services/build
      target: webgui
      args: *buildargs
    command: tail -f /dev/null
    networks:
      - frontend
      - backend
    volumes:
      - ./volumes/shared:/shared
      - collecting_society_test_trytond_files:/var/lib/trytond
    depends_on:
      test_database:
        condition: service_healthy
    env_file:
      - .env
      - services/webapi.env
      - services/webgui.env
    environment:
      ENVIRONMENT: testing
      TRYTON_HOSTNAME: test_erpserver
      POSTGRES_HOSTNAME: test_database
      API_C3SUPLOAD_URL: http://test_web:6545/repertoire
      API_C3SUPLOAD_CORS_ORIGINS: http://test_web:6544
      API_DATATABLES_URL: http://test_web:6545/datatables
      API_DATATABLES_CORS_ORIGINS: http://test_web:6544
      API_C3SMEMBERSHIP_URL: http://test_web:6545/c3smembership
  
  test_worker:
    build:
      context: ./services/build
      target: worker
      args: *buildargs
    cpu_percent: 50
    mem_limit: 500m
    #command: cron && tail -f /shared/tmp/repro.log &
    command: bash -c "while true; do cd /shared/src/collecting_society_worker/collecting_society_worker && python repro.py all; sleep 60; done"
    networks:
      - backend
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      test_erpserver:
        condition: service_healthy
      test_fingerprint:
          condition: service_started
    env_file:
      - .env
      - services/worker.env
    environment:
      ENVIRONMENT: testing
      TRYTON_HOSTNAME: test_erpserver
      POSTGRES_HOSTNAME: test_database
      ECHOPRINT_HOSTNAME: test_fingerprint
      DEBUGGER_WINPDB: 0
      DEBUGGER_PTVSD: 0

  test_browser:
    build:
      context: ./services/build
      target: browser
      args:
        ENVIRONMENT: ${ENVIRONMENT}
        APT_CACHERURL: ${APT_CACHERURL}
        WORKDIR: ${WORKDIR}
        DEBIAN: ${DEBIAN}
        DEBUGGER_WINPDB: ${DEBUGGER_WINPDB}
        DEBUGGER_PTVSD: ${DEBUGGER_PTVSD}
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - frontend
    depends_on:
      test_web:
        condition: service_started
  
  test_fingerprint:
    build:
      context: ./services/build
      target: fingerprint
      args: *buildargs
    command: /bin/fingerprint
    volumes:
      - collecting_society_test_echoprint_data:/opt/echoprint-data
    networks:
      - backend
    env_file:
      - .env
    environment:
      ENVIRONMENT: testing
